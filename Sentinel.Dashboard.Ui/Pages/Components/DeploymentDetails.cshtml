<template id="deployment-details">
  <div class="self-center hover:bg-gray-100 w-64 items-center text-sm">
    <div v-if="links || workloads.length === 1" class="flex pb-2">
      <a :href="getPortalLink(deployment.instance.metric)" target="_blank">
        <div class="rounded me-1 py-1 w-14 border border-gray-400 hover:border-sky-600 hover:text-sky-800 hover:bg-sky-200/[.3] cursor-pointer" title="Pod details">
          <div class="flex flex-col items-center">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
              <path stroke-linecap="round" stroke-linejoin="round" d="M15 9h3.75M15 12h3.75M15 15h3.75M4.5 19.5h15a2.25 2.25 0 0 0 2.25-2.25V6.75A2.25 2.25 0 0 0 19.5 4.5h-15a2.25 2.25 0 0 0-2.25 2.25v10.5A2.25 2.25 0 0 0 4.5 19.5Zm6-10.125a1.875 1.875 0 1 1-3.75 0 1.875 1.875 0 0 1 3.75 0Zm1.294 6.336a6.721 6.721 0 0 1-3.17.789 6.721 6.721 0 0 1-3.168-.789 3.376 3.376 0 0 1 6.338 0Z" />
            </svg>
            <span>Info</span>
          </div>
        </div>
      </a>

      <a :href="`humio/spaces/${deployment.instance.metric.aks_space}/environments/${deployment.instance.metric.namespace}/logs/${deployment.instance.metric.aks_name}/events?timeSpan=30days`" target="_blank">
        <div class="rounded me-1 py-1 w-14 border border-gray-400 hover:border-sky-600 hover:text-sky-800 hover:bg-sky-200/[.3] cursor-pointer" title="Log history">
          <div class="flex flex-col items-center">
            <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="1.5"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-history">
              <path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 8l0 4l2 2" /><path d="M3.05 11a9 9 0 1 1 .5 4m-.5 5v-5h5" />
            </svg>
            <span>Logs</span>
          </div>
        </div>
      </a>

      <a v-if="['api', 'ui', 'hub'].includes(deployment.instance.metric.aks_type)" 
         :href="getWebsiteLink(deployment.instance.metric)" target="_blank">
        <div class="rounded me-1 py-1 w-14 border border-gray-400 hover:border-sky-600 hover:text-sky-800 hover:bg-sky-200/[.3] cursor-pointer" title="Visit site">
          <div class="flex flex-col items-center">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
              <path stroke-linecap="round" stroke-linejoin="round" d="m20.893 13.393-1.135-1.135a2.252 2.252 0 0 1-.421-.585l-1.08-2.16a.414.414 0 0 0-.663-.107.827.827 0 0 1-.812.21l-1.273-.363a.89.89 0 0 0-.738 1.595l.587.39c.59.395.674 1.23.172 1.732l-.2.2c-.212.212-.33.498-.33.796v.41c0 .409-.11.809-.32 1.158l-1.315 2.191a2.11 2.11 0 0 1-1.81 1.025 1.055 1.055 0 0 1-1.055-1.055v-1.172c0-.92-.56-1.747-1.414-2.089l-.655-.261a2.25 2.25 0 0 1-1.383-2.46l.007-.042a2.25 2.25 0 0 1 .29-.787l.09-.15a2.25 2.25 0 0 1 2.37-1.048l1.178.236a1.125 1.125 0 0 0 1.302-.795l.208-.73a1.125 1.125 0 0 0-.578-1.315l-.665-.332-.091.091a2.25 2.25 0 0 1-1.591.659h-.18c-.249 0-.487.1-.662.274a.931.931 0 0 1-1.458-1.137l1.411-2.353a2.25 2.25 0 0 0 .286-.76m11.928 9.869A9 9 0 0 0 8.965 3.525m11.928 9.868A9 9 0 1 1 8.965 3.525" />
            </svg>
            <span>Site</span>
          </div>
        </div>
      </a>

    </div>
    <div v-if="deployment.alerts.length > 0" class="font-bold pb-2">
      Alerts:
      <div v-for="a in getDistinctAlerts(deployment.alerts)" class="text-red-600 truncate">{{ a }}</div>
    </div>
    <div v-if="!deployment.metrics" class="text-orange-500 font-bold pb-2">
      No data from metrics endpoint! Is the app running?
    </div>
    <div>
      Deployed <span class="font-bold">{{ toRelative(deployment.instance.metric.aks_deployed) }}</span>
    </div>
    <div class="flex">
      <div>User:</div>
      <div class="ps-1 font-bold" v-if="deployment.instance.metric.org_user"> {{ deployment.instance.metric.github_user}} ({{ deployment.instance.metric.org_user?.replace('-at-dsb.dk', '') }}) </div>
      <div class="ps-1 font-bold" v-else> {{ deployment.instance.metric.github_user}}</div>
    </div>
    <div class="flex" v-if="deployment.instance.metric.org_system && deployment.instance.metric.org_system != 'none'">
      <div>System Id:</div>
      <div class="ps-1 font-bold">{{ deployment.instance.metric.org_system }}</div>
    </div>
    <div class="flex" v-if="deployment.instance.metric.org_team && deployment.instance.metric.org_team != 'none'">
      <div>Team:</div>
      <div class="ps-1 font-bold">{{ deployment.instance.metric.org_team }}</div>
    </div>
    <div class="flex" v-if="deployment.instance.metric.org_responsible && deployment.instance.metric.org_responsible != 'none'">
      <div>Responsible:</div>
      <div class="ps-1 font-bold">{{ deployment.instance.metric.org_responsible?.replace('-at-', '@@') }}</div>
    </div>
    <div class="flex" v-if="deployment.instance.metric.org_contact && deployment.instance.metric.org_contact != 'none'">
      <div>Contact:</div>
      <div class="ps-1 font-bold">{{ deployment.instance.metric.org_contact?.replace('-at-', '@@') }}</div>
    </div>
    <div class="flex">
      <div>Branch:</div>
      <div class="ps-1 font-bold w-52 truncate">{{ deployment.instance.metric.github_head_branch ?? deployment.instance.metric.github_branch }}</div>
    </div>
    <div class="flex">
      <div>Version:</div>
      <div class="ps-1 font-bold">{{ deployment.instance.metric.aks_version }}</div>
    </div>
    <div class="flex">
      <div>Metrics:</div>
      <div class="ps-1 font-bold">{{ deployment.metrics ? 'Yes' : 'No' }}</div>
    </div>
    <div class="flex">
      <div>NS:</div>
      <div class="ps-1 font-bold">{{ deployment.instance.metric?.namespace?.split('-')[0] }}</div>
    </div>
  </div>
</template>

<script type="module">
let setup = (props, ctx) => {
  let toRelative = (value) => {
    const past = luxon.DateTime.fromSeconds(Number(value)).setLocale('da-dk');
    return past.toRelativeCalendar({locale: "en", unit:"days"});
  }
  
  let getDistinctAlerts = (value) => {
    let alerts = value.map(x => x.metric?.alertname);
    let result = [... new Set(alerts)];
    return result;
  }
  
  return { getPortalLink, getWebsiteLink, toRelative, getDistinctAlerts }
}

components["deployment-details"] = { template: "#deployment-details", props: ['deployment', 'workloads', 'links'], setup};
</script>
