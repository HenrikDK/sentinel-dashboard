<template id="deployment-details">
  <div class="self-center hover:bg-gray-100 w-64 items-center text-sm">
    <div v-if="deployment.alerts.length > 0" class="font-bold pb-2">
      Alerts:
      <div v-for="a in getDistinctAlerts(deployment.alerts)" class="text-red-600 truncate">{{ a }}</div>
    </div>
    <div v-if="!deployment.metrics" class="text-orange-500 font-bold pb-2">
      No data from metrics endpoint! Is the app running?
    </div>
    <div>
      Deployed <span class="font-bold">{{ toRelative(deployment.instance.metric.aks_deployed) }}</span>
      by <span class="font-bold"> {{ deployment.instance.metric.github_user}} </span>
    </div>
    <div v-if="deployment.instance.metric.aks_systemid != 'no'">
      System Id: <span class="font-bold">{{ deployment.instance.metric.aks_systemid }}</span>
    </div>
    <div>
      Branch: <span class="font-bold w-44 truncate">{{ deployment.instance.metric.github_branch }}</span>
    </div>
    <div>
      Version <span class="font-bold">{{ deployment.instance.metric.aks_version }}</span>
    </div>
    <div>
      Metrics: <span class="font-bold">{{ deployment.metrics ? 'Yes' : 'No' }}</span>
    </div>
    <div>
      NS: <span class="font-bold">{{ deployment.instance.metric?.namespace?.split('-')[0] }}</span>
    </div>
  </div>
</template>

<script type="module">
let setup = () => {
  let toRelative = (value) => {
    const past = luxon.DateTime.fromSeconds(Number(value)).setLocale('da-dk');
    return past.toRelativeCalendar({locale: "en"});
  }
  
  let getDistinctAlerts = (value) => {
    let alerts = value.map(x => x.metric?.alertname);
    let result = [... new Set(alerts)];
    return result;
  }
  
  return { toRelative, getDistinctAlerts }
}

components["deployment-details"] = { template: "#deployment-details", props: ['deployment'], setup};
</script>
